@model ShopApp.ViewModels.OrderHistoryViewModel

@Styles.Render("~/bundles/UserPanel")
@Styles.Render("~/bundles/Kat")

<script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
@Html.Partial("_SideBar")

<div class="container pl-1">

    <div class=" row justify-content-center">
        <div class="col-12 mb-2 text-center">
            <div class="btn-group" role="group">
                <button type="button" class="btn switch switch-bought btn-primary on">Kupione</button>
                <button type="button" class="btn switch switch-sold btn-secondary">Sprzedane</button>
            </div>
        </div>
    </div>

    <div class=" row-offer mb-4 mr-1 pl-4">

        @* BOUGHT TRANSACTIONS *@
        <div id="boughtDiv" class="">
            <br />
            @{
                foreach (var boughtTransaction in Model.Bought)
                {
                    string transactionStatus = boughtTransaction.IsAccepted ? "Potwierdzona" : "Niepotwierdzona";
                    double transactionSum = 0;
                    foreach (var item in boughtTransaction.BucketItems)
                    {
                        transactionSum += item.TotalPrice * item.Quantity;
                    }

                    <div class="col-12 bought-row">
                        <div class="row">

                            <div class="col-1 pl-2">
                                ID: @boughtTransaction.TransactionID
                            </div>
                            <div class="col-2" data-placement="top" title="Dokładna data: @boughtTransaction.CreationDate">
                                Data: @boughtTransaction.CreationDate.ToShortDateString()
                            </div>
                            <div class="col-2">
                                Sprzedający: @boughtTransaction.Seller.Login
                            </div>
                            <div class="col-3">Suma: @transactionSum zł</div>
                            <div class="col-3">Status: @transactionStatus</div>
                            <div class="col-1"><i class="fas fa-chevron-down"></i></div>


                        </div>

                        <div class="row">

                            <div class="col-3 pl-2">
                                Produkt
                            </div>
                            <div class="col-2">
                                Zakupiona ilość
                            </div>
                            <div class="col-3">
                                Cena
                            </div>

                        </div>

                        @foreach (var boughtItem in boughtTransaction.BucketItems)
                        {
                            <div class="row">

                                @{
                                    double itemPrice = boughtItem.Offer != null ? boughtItem.Offer.Price : boughtItem.Bundle.BundlePrice;
                                    string itemTitle = boughtItem.Offer != null ? boughtItem.Offer.Title : boughtItem.Bundle.Title;
                                }

                                <div class="col-3 pl-2">
                                    @itemTitle
                                </div>
                                <div class="col-2">
                                    @boughtItem.Quantity
                                </div>
                                <div class="col-3">
                                    @itemPrice.ToString("N2") zł
                                </div>

                            </div>
                        }
                    </div>
                    <br />
                }
            }
        </div>

        @* SOLD TRANSACTIONS *@
        <div id="soldDiv" class="d-none">
            <br />
            @{
                foreach (var soldTransaction in Model.Sold)
                {
                    double transactionSum = 0;
                    foreach (var item in soldTransaction.BucketItems)
                    {
                        transactionSum += item.TotalPrice * item.Quantity;
                    }

                    <div class="col-12 sold-row">
                        <div class="row">

                            <div class="col-1 pl-2">
                                ID: @soldTransaction.TransactionID
                            </div>
                            <div class="col-2" data-placement="top" title="Dokładna data: @soldTransaction.CreationDate">
                                Data: @soldTransaction.CreationDate.ToShortDateString()
                            </div>
                            <div class="col-3">
                                Kupujący: @soldTransaction.Seller.Login
                            </div>
                            <div class="col-3">Suma: @transactionSum zł</div>
                            <div class="col-1">
                                <button class="btn btn-success"> Akceptuj </button>
                            </div>
                            <div class="col-1">
                                <button class="btn btn-danger"> Odrzuć </button>
                            </div>

                            <div class="col-1"><i class="fas fa-chevron-down"></i></div>


                        </div>

                        <div class="row">

                            <div class="col-4 pl-2">
                                Produkt
                            </div>
                            <div class="col-4">
                                Zakupiona ilość
                            </div>
                            <div class="col-4">
                                Cena
                            </div>

                        </div>

                        @foreach (var soldItem in soldTransaction.BucketItems)
                        {
                            <div class="row">

                                @{
                                    double itemPrice = soldItem.Offer != null ? soldItem.Offer.Price : soldItem.Bundle.BundlePrice;
                                    string itemTitle = soldItem.Offer != null ? soldItem.Offer.Title : soldItem.Bundle.Title;
                                }

                                <div class="col-4 pl-2">
                                    @itemTitle
                                </div>
                                <div class="col-4">
                                    @soldItem.Quantity
                                </div>
                                <div class="col-4">
                                    @itemPrice.ToString("N2") zł
                                </div>

                            </div>
                        }
                    </div>
                    <br />
                }
            }
        </div>
    </div>
</div>



@section scripts
{
    <script src="~/Scripts/OrderHistoryScript.js"></script>
}
