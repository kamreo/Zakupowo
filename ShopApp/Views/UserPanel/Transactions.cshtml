@model ShopApp.ViewModels.OrderHistoryViewModel

@Styles.Render("~/bundles/UserPanel")
@Styles.Render("~/bundles/Kat")

<script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
@Html.Partial("_SideBar")

<div class="container pl-1 pt-4 pt-lg-0 ">

	<div class="row-offer mb-4 mr-1 pl-2 pl-lg-4">

		<div class=" row justify-content-center">
			<div class="row mb-4 mr-1">
				<div class="col p-0 pt-3 font-weight-bold">
					<h3> Moje transakcje</h3>
				</div>
			</div>
		</div>
		<div class="row justify-content-center pl-4">
			<h6>
				W tym miejscu, możesz przeglądać dokonane transakcje z poszczególnymi użytkownikami oraz zarządzać transakcjami sprzedaży.
			</h6>
		</div>
		<hr>

		<div class="row justify-content-center">
			<div class="col-12 mb-2 text-center">
				<div class="btn-group sold-bought-switcher" role="group">
					<button type="button" class="btn switch switch-bought btn-primary on">Kupione</button>
					<button type="button" class="btn switch switch-sold btn-secondary">Sprzedane</button>
				</div>
			</div>
		</div>
		<hr>

		@* BOUGHT TRANSACTIONS *@
		<div id="boughtDiv" class="">
			<br />

			@{

				foreach (var boughtTransaction in Model.Bought)
				{
					string collapseID = "boughtCollapse-" + boughtTransaction.TransactionID;
					string transactionStatus = string.Empty;
					string transactionStatusColor = string.Empty;
					//string transactionStatus = boughtTransaction.IsAccepted ? "Potwierdzona" : "Niepotwierdzona";
					//transactionStatus = boughtTransaction.IsChosen ? transactionStatus : "Oczekuje na potwierdzenie";
					//string transactionStatusColor = boughtTransaction.IsAccepted ? "green" : "red";
					double transactionSum = 0;
					foreach (var item in boughtTransaction.BucketItems)
					{
						transactionSum += item.TotalPrice;
					}

					if (boughtTransaction.IsChosen)
					{
						if (boughtTransaction.IsAccepted)
						{
							transactionStatus = "Potwierdzona";
							transactionStatusColor = "green";
						}
						else
						{
							transactionStatus = "Odrzucona";
							transactionStatusColor = "red";
						}
					}
					else
					{
						transactionStatus = "Oczekuje na potwierdzenie";
						transactionStatusColor = "black";
					}

					<div class="col-12 bought-row pb-4">
						<div class="row">
							<div class="col-4 col-lg-1 col-md-1 p-lg-0 text-secondary font-weight-bold ">
								ID:
							</div>
							<div class="col-5 col-lg-1 col-md-1 pb-2">
								@boughtTransaction.TransactionID
							</div>
							<div class="col-4 col-lg-1 col-md-1 text-secondary font-weight-bold">
								Data:
							</div>
							<div class="col-5 col-lg-1 mr-1 col-md-1 pb-2" data-toggle="tooltip" data-placement="top" title="Dokładna data: @boughtTransaction.CreationDate">
								@boughtTransaction.CreationDate.ToShortDateString()
							</div>
							<div class="col-4 col-lg-1 col-md-1 mr-0 mr-lg-3 mr-md-4 ml-md-4 text-secondary font-weight-bold">
								Sprzedający:
							</div>
							<div class="col-5 col-lg-1  col-md-1 pb-2 mr-md-4">
								@boughtTransaction.Seller.Login
							</div>

							<div class="col-4 col-lg-1 col-md-1 text-secondary font-weight-bold">
								Status:
							</div>
							<div class="col-5 col-lg-3 col-md-3  pb-4" style="color:@transactionStatusColor">@transactionStatus</div>
							<div class="col-1 col-1-lg pb-3">
								<a class="btn btn-warning" data-toggle="collapse" href="#@collapseID" role="button" aria-expanded="false" aria-controls="collapseExample">
									<i class="fas fa-chevron-down"></i>
								</a>
							</div>

						</div>
						<div class="collapse" id="@collapseID">
							<div class="row mr-3 mb-3 mt-3" style="border-bottom-style:solid; border-bottom-width:thin;">

								<div class="col-4 pl-2 text-secondary font-weight-bold">
									Produkt
								</div>
								<div class="col-4 text-secondary font-weight-bold">
									Zakupiona ilość
								</div>
								<div class="col-4 text-secondary font-weight-bold">
									Cena
								</div>

							</div>

							@foreach (var boughtItem in boughtTransaction.BucketItems)
							{
								<div class="row pb-3">

									@{
										double itemPrice = boughtItem.Offer != null ? boughtItem.Offer.Price : boughtItem.Bundle.BundlePrice;
										string itemTitle = boughtItem.Offer != null ? boughtItem.Offer.Title : boughtItem.Bundle.Title;
									}

									<div class="col-4 pl-2">
										@itemTitle
									</div>
									<div class="col-4 pl-2">
										@boughtItem.Quantity
									</div>
									<div class="col-4 pl-0">
										@itemPrice.ToString("N2").Replace(",", " ") zł
									</div>

								</div>
								<hr />
							}
							<div class="d-flex flex-row-reverse">

								<div class="col-5 col-lg-2 col-md-2  pb-4">
									@transactionSum.ToString("N2").Replace(",", " ") zł
								</div>
								<div class="col-4 col-lg-2 text-secondary font-weight-bold">
									Suma
								</div>

							</div>
						</div>
					</div>
					<hr>
				}
			}
		</div>

		@*SOLD TRANSACTIONS*@
		<div id="soldDiv" class="d-none">
			<br />
			@{

				foreach (var soldTransaction in Model.Sold)
				{
					string collapseID = "soldCollapse-" + soldTransaction.TransactionID;
					string transactionStatus = soldTransaction.IsAccepted ? "Potwierdzona" : "Niepotwierdzona";
					string transactionStatusColor = soldTransaction.IsAccepted ? "green" : "red";
					double transactionSum = 0;
					foreach (var item in soldTransaction.BucketItems)
					{
						transactionSum += item.TotalPrice * item.Quantity;
					}

					<div class="col-12 sold-row pb-4 pt-1">
						<div class="row transaction-row" id="transaction-row-@soldTransaction.TransactionID">
							<div class="col-4 col-lg-1 col-md-1 text-secondary font-weight-bold ">
								ID:
							</div>
							<div class="col-5 col-lg-1 col-md-1 pb-2 ">
								@soldTransaction.TransactionID
							</div>
							<div class="col-4 col-lg-1 col-md-1 text-secondary font-weight-bold">
								Data:
							</div>
							<div class="col-5 col-lg-1 col-md-1 mr-5  pb-2" data-placement="top" title="Dokładna data: @soldTransaction.CreationDate">
								@soldTransaction.CreationDate.ToShortDateString()
							</div>

							<div class="col-4 col-lg-1 col-md-1 text-secondary font-weight-bold">
								Kupujący:
							</div>

							<div class="col-5 col-lg-1 col-md-2 ml-lg-2 pb-3 mr-3">
								@soldTransaction.Buyer.Login
							</div>



							@if (!soldTransaction.IsChosen)
							{
								<div class="col-3  pl-5">
									@* TEN DIV POTRZEBNY *@
									<div class="btn-group mr-5 mr-lg-0 manage-transaction" role="group" id="@soldTransaction.TransactionID">
										<button class="btn btn-success btn-accept"> Akceptuj </button>
										<button class="btn btn-danger btn-discard"> Odrzuć </button>
										<a class="btn btn-warning" data-toggle="collapse" href="#@collapseID" role="button" aria-expanded="false" aria-controls="collapseExample">
											<i class="fas fa-chevron-down"></i>
										</a>
									</div>
								</div>
							}
							else
							{
								<div class="col-4 col-lg-1 col-md-1 text-secondary font-weight-bold">
									Status:
								</div>
								<div class="col-5 col-lg-3 col-md-3  pb-4" style="color:@transactionStatusColor">@transactionStatus</div>
								<div class="col-1 col-lg-1 pb-3">
									<a class="btn btn-warning" data-toggle="collapse" href="#@collapseID" role="button" aria-expanded="false" aria-controls="collapseExample">
										<i class="fas fa-chevron-down"></i>
									</a>
								</div>
							}
						</div>

						<div class="collapse" id="@collapseID">

							<div class="row mr-1 mb-3 mt-2 pb-4 pt-3" style="border-bottom-style:solid; border-bottom-width:thin;">
								<div class="col-4 pl-2 text-secondary font-weight-bold ">
									Produkt
								</div>
								<div class="col-4 text-secondary font-weight-bold">
									Ilość
								</div>
								<div class="col-4 text-secondary font-weight-bold">
									Cena
								</div>
							</div>

							@foreach (var soldItem in soldTransaction.BucketItems)
							{
								<div class="row pb-3">

									@{
										double itemPrice = soldItem.Offer != null ? soldItem.Offer.Price : soldItem.Bundle.BundlePrice;
										string itemTitle = soldItem.Offer != null ? soldItem.Offer.Title : soldItem.Bundle.Title;
									}

									<div class="col-4 pl-2">
										@itemTitle
									</div>
									<div class="col-4">
										@soldItem.Quantity
									</div>
									<div class="col-4 pl-0">
										@itemPrice.ToString("N2").Replace(",", " ") zł
									</div>

								</div>
								<hr />
							}

							<div class="d-flex flex-row-reverse">

								<div class="col-5 col-lg-2 col-md-2  pb-4">
									@transactionSum.ToString("N2").Replace(",", " ") zł
								</div>
								<div class="col-4 col-lg-2 text-secondary font-weight-bold">
									Suma
								</div>
							</div>



						</div>
					</div>
					<hr>
				}
			}
		</div>

	</div>
</div>

@section scripts
{
	<script src="~/Scripts/OrderHistoryScript.js"></script>
}
