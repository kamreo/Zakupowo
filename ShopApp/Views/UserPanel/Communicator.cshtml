@*MODEL IS LAST MESSAGES FROM/TO EACH USER*@
@model IEnumerable<ShopApp.Models.Message>

@Styles.Render("~/bundles/UserPanel")
<script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
@Html.Partial("_SideBar")

@{
    bool lackMessages = ViewBag.LackMessages == null ? false : true;

    ShopApp.Models.User lastUser = null;
    if (!lackMessages)
    {
        lastUser = HttpContext.Current.User.Identity.Name == Model.First().Sender.Login ? Model.First().Receiver : Model.First().Sender;
    }

    List<List<ShopApp.Models.Message>> allMessages = (List<List<ShopApp.Models.Message>>)ViewBag.AllMessages;
}

<div class="container pl-5">

    <div class="row rounded-lg overflow-hidden pl-lg-5 pl-md-4">
        <div class="col-2 col-lg-2  pb-3 pl-4"></div>
        <div class="col-12 col-lg-3  pb-3 pl-4">
            <h4> Napisz wiadomość do: </h4>
        </div>
        <div class="col-12 col-lg-5 pl-4 pr-5 pb-4">
            <form id="create-message-user-form " class="bg-light">
                <div class="input-group">
                    <input id="create-message-user" type="text" placeholder="Login użytkownika" aria-describedby="create-message-user-btn" class="form-control rounded-0 border-0 py-4 bg-light" autocomplete="off">
                    @*<div class="input-group-append">
            <a id="create-message-user-btn" class="btn btn-link" onclick="createMessageWindow()"><i class="fas fa-user-plus" style="color:black"></i></a>
        </div>*@
                    <i class="fas fa-user-plus pt-3 pr-2" style="color:black"></i>
                </div>
            </form>

            <div class="col-12" id="usersTableBody">
                @*<a href="#" onclick="createMessageWindow()" class="user-row row" id="userLogin" style="background-color:lightblue;">
                                <div class="col-3">
                                    <img src="~/Images/user.jpg" alt="user" width="50" class="rounded-circle">
                                </div>
                                <div style="color:black" class="td-text col-9">
                                    UserLogin - UserFirstName
                        </div>
                    </a>*@
            </div>

        </div>
    </div>

    <div class="row rounded-lg overflow-hidden pl-lg-5 pl-md-4">

        <!-- Users box-->
        <div class="col-2 col-lg-4 pl-lg-0 pl-md-0 pl-3 pr-0">
            <div class="bg-white">

                <div class="text-communicator bg-gray px-4 py-2 bg-light">
                    <p class="h5 mb-0 py-1">Najnowsze</p>
                </div>

                <div class="messages-box">
                    <div class="list-group rounded-0 nav-pills" role="tablist" aria-orientation="vertical" id="div-user-boxes">
                        @{
                            if (Model != null && Model.Count() > 0 && !lackMessages)
                            {
                                int n = 0;
                                foreach (var msg in Model)
                                {
                                    string shortSentDate = string.Empty;
                                    int userID = msg.Sender.Login == HttpContext.Current.User.Identity.Name ? msg.Receiver.UserID : msg.Sender.UserID;
                                    string ariaControls = userID + "Conversation";             // userIDConversation
                                    string tabID = ariaControls + "-tab";                      // userIDConversation-tab
                                    string pID = ariaControls + "-p";                          // userIDConversation-p
                                    string dateID = ariaControls + "-date";                    // userIDConversation-date
                                    string mediaID = ariaControls + "-media";                  // userIDConversation-media
                                    string hrefLink = "#v-pills-" + ariaControls;              // #v-pills-userIDConversation

                                    string selectedAreaClass = n == 0 ? "true" : "false";
                                    string activeClass = n == 0 ? "active" : string.Empty;
                                    string contactLogin = msg.Sender.Login;
                                    string whomWrote = string.Empty;
                                    string avatarURL = msg.Sender.AvatarImage.PathToFile;
                                    string unreadClass = "";

                                    if (msg.Sender.Login == HttpContext.Current.User.Identity.Name) // IT MEANS WE  WRITE TO SOMEONE AND WITHOUT RESPONSE
                                    {
                                        contactLogin = msg.Receiver.Login;
                                        whomWrote = "Ty: ";
                                        avatarURL = msg.Receiver.AvatarImage.PathToFile;
                                    }
                                    else
                                    {
                                        if (msg.IsRead == false)
                                        {
                                            unreadClass = "undread-msg";
                                        }
                                    }

                                    if (msg.SentTime.CompareTo(DateTime.Now.AddDays(-1)) < 1)
                                    {
                                        shortSentDate = msg.SentTime.ToShortDateString();
                                    }
                                    else
                                    {
                                        shortSentDate = msg.SentTime.ToShortTimeString();
                                    }

                                    if (msg.Sender.AvatarImage == null)
                                    {
                                        System.Diagnostics.Debug.WriteLine("Użytkownik: " + msg.Sender.Login + " nie ma avatara.");
                                        msg.Sender.AvatarImage.PathToFile = "../../App_Files/Images/UserAvatars/DefaultAvatar.jpg";
                                    }
                                
                                            <a onclick="scrollToBottom(this.id)" id="@tabID" data-toggle="pill" href="@hrefLink" role="tab" class="user-last-msg list-group-item list-group-item-action list-group-item-light rounded-0 @activeClass nav-link">
                                                <div class="media" id="@mediaID">
                                                    <img src="@avatarURL" alt="user" width="30" class="rounded-circle img-user-box" >
                                                    <div class="users-box-content">
                                                        <div class="media-body ml-4">
                                                     
                                                                <div class="d-flex align-items-center justify-content-end mb-1">
                                                                    <h6 class="mb-0 pr-lg-4"> @contactLogin </h6><small id="@dateID" class="small font-weight-bold pl-5 ml-1 ml-lg-5"> @shortSentDate </small>
                                                                </div>
                                                            <p style="color:black" id="@pID" class="font-weight-bold mb-0 text-small">@whomWrote@msg.Content</p>
                                                        
                                                        </div>

                                    <a onclick="scrollToBottom(this.id)" id="@tabID" data-toggle="pill" href="@hrefLink" role="tab" class="user-last-msg @activeClass @unreadClass list-group-item list-group-item-action list-group-item-light rounded-0 nav-link">
                                        <div class="media" id="@mediaID">
                                            <img src="@avatarURL" alt="user" width="50" class="rounded-circle">
                                            <div class="media-body ml-4">
                                                <div class="d-flex align-items-center justify-content-between mb-1">
                                                    <h6 class="mb-0"> @contactLogin </h6><small id="@dateID" class="small font-weight-bold"> @shortSentDate </small>
                                                </div>
                                            </a>
                                            n++;
                                            }
                                            }
                                            }

                                        </div>
                                </div>
            </div>
        </div>

        <!-- Chat Box-->
       

        <div class="col-10 col-lg-7 px-0 pb-3">
            <div id="div-chat-boxes" class="col-12 tab-content p-0">
                @{
                    if (!lackMessages)
                    {
                        int k = 0;
                        foreach (var messagesList in allMessages)
                        {
                            //JEŚLI ODBIORCĄ JESTEŚMY MY PRZYDZIEL NADAWCĘ WIADOMOŚCI, W PRZECIWYNYM WYPADKU (GDY MY JESTEŚMY NADAWCĄ) PRZYDZIEL NASZE KONTO
                            ShopApp.Models.User user = messagesList[0].Receiver.Login == HttpContext.Current.User.Identity.Name ? messagesList[0].Sender : messagesList[0].Receiver;

                            string conversationID = "v-pills-" + user.UserID + "Conversation";
                            string ariaLabelled = conversationID + "-tab";
                            string activeClass = user == lastUser ? "active" : string.Empty;


                                <div class="px-3 py-3 chat-box bg-white tab-pane @activeClass" id="@conversationID" role="tabpanel" aria-labelledby="@ariaLabelled">
                                  <div class="left-icon">
                                    <i class="fas fa-angle-left fa-2x pb-4"> </i>

                                  </div>
                                    @{
                                        string customSentDate = string.Empty;
                                        foreach (var message in messagesList)
                                        {

                                            if (message.SentTime.CompareTo(DateTime.Now.AddDays(-1)) < 1)
                                            {
                                                customSentDate = message.SentTime.ToString();
                                            }
                                            else
                                            {
                                                customSentDate = message.SentTime.ToShortTimeString();
                                            }

                                            if (message.Sender == user)
                                            {

                                                <div class="media w-50 mb-3 message">
                                                    <img src="@user.AvatarImage.PathToFile" alt="user" width="30" class="rounded-circle">
                                                    <div class="media-body ml-3">
                                                        <div class="bg-light rounded py-2 px-3 mb-2" data-toggle="tooltip" title="@customSentDate">
                                                            <p class="text-small mb-0 text-muted">@message.Content</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }

                                            if (message.Sender.Login == HttpContext.Current.User.Identity.Name)
                                            {
                                                <div class="media w-50 ml-auto mb-3 message">
                                                    <div class="media-body">
                                                        <div class="bg-primary rounded py-2 px-3 mb-2" data-toggle="tooltip" title="@customSentDate">
                                                            <p class="text-small mb-0 text-white">@message.Content</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                </div>

                            k++;
                        }
                    }
                    else
                    {
                        <div class="px-4 py-5 chat-box bg-white tab-pane active" role="tabpanel"></div>
                    }
                }

            </div>
            <div class="typing-area">
            <div class="col-13">

                <!-- Typing area -->
                <form id="message-send-form" class="bg-light">
                    <div class="input-group">
                        <input id="message-content" type="text" placeholder="Napisz wiadomość" aria-describedby="send-message-btn" class="form-control rounded-0 border-0 py-4 bg-light" autocomplete="off">
                        <div class="input-group-append">
                            <a id="send-message-btn" class="btn btn-link"> <i class="fa fa-paper-plane"></i></a>
                        </div>
                    </div>
                </form>
            </div>

            </div>
        </div>
    </div>
</div>



@section scripts
{
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/js"></script>
    <script src="~/Scripts/ChatScript.js"></script>
}
